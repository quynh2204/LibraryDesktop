// <auto-generated />
using System;
using LibraryDesktop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryDesktop.Data.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("LibraryDesktop.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalChapters")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "J.K. Rowling",
                            CategoryId = 1,
                            CoverImageUrl = "LibraryDesktop/Assets/1.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Câu chuyện về cậu bé phù thủy Harry Potter và cuộc phiêu lưu đầu tiên tại trường Hogwarts. Khám phá thế giới phép thuật đầy kỳ diệu và những người bạn đồng hành.",
                            Price = 0,
                            Status = 2,
                            Title = "Harry Potter và Hòn đá Phù thủy",
                            TotalChapters = 0,
                            ViewCount = 70
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Nguyễn Nhật Ánh",
                            CategoryId = 2,
                            CoverImageUrl = "LibraryDesktop/Assets/2.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tác phẩm kể về tuổi thơ của những đứa trẻ miền quê, với những kỷ niệm đẹp về tình anh em, tình làng nghĩa xóm và những bài học cuộc sống quý giá.",
                            Price = 0,
                            Status = 2,
                            Title = "Tôi thấy hoa vàng trên cỏ xanh",
                            TotalChapters = 0,
                            ViewCount = 50
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Arthur Conan Doyle",
                            CategoryId = 4,
                            CoverImageUrl = "LibraryDesktop/Assets/3.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tuyển tập những vụ án kinh điển của thám tử vĩ đại Sherlock Holmes và người bạn đồng hành Watson. Những câu chuyện trinh thám hấp dẫn và đầy bí ẩn.",
                            Price = 0,
                            Status = 1,
                            Title = "Sherlock Holmes: Cuộc phiêu lưu của Sherlock Holmes",
                            TotalChapters = 0,
                            ViewCount = 25
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Robert Kiyosaki",
                            CategoryId = 3,
                            CoverImageUrl = "LibraryDesktop/Assets/4.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cuốn sách dạy về tư duy tài chính và cách quản lý tiền bạc hiệu quả. Những bài học quý giá về đầu tư và xây dựng tài sản.",
                            Price = 50,
                            Status = 1,
                            Title = "Dạy con làm giàu",
                            TotalChapters = 0,
                            ViewCount = 30
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Ngô Sĩ Liên",
                            CategoryId = 5,
                            CoverImageUrl = "LibraryDesktop/Assets/5.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tác phẩm sử học quan trọng ghi chép lịch sử Việt Nam từ thời cổ đại đến thế kỷ XV. Nguồn tài liệu quý giá về văn hóa và lịch sử dân tộc.",
                            Price = 0,
                            Status = 2,
                            Title = "Lịch sử Việt Nam: Đại Việt sử ký toàn thư",
                            TotalChapters = 0,
                            ViewCount = 35
                        },
                        new
                        {
                            BookId = 6,
                            Author = "Paulo Coelho",
                            CategoryId = 6,
                            CoverImageUrl = "LibraryDesktop/Assets/6.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Câu chuyện về chàng chăn cừu Santiago và cuộc hành trình tìm kiếm kho báu. Một tác phẩm triết lý sâu sắc về ước mơ và ý nghĩa cuộc sống.",
                            Price = 50,
                            Status = 1,
                            Title = "Nhà giả kim",
                            TotalChapters = 0,
                            ViewCount = 40
                        },
                        new
                        {
                            BookId = 7,
                            Author = "Dale Carnegie",
                            CategoryId = 7,
                            CoverImageUrl = "LibraryDesktop/Assets/7.png",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cuốn sách kinh điển về nghệ thuật giao tiếp và ứng xử. Hướng dẫn cách xây dựng mối quan hệ tốt và thành công trong cuộc sống.",
                            Price = 50,
                            Status = 1,
                            Title = "Đắc nhân tâm",
                            TotalChapters = 0,
                            ViewCount = 45
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Giả Tưởng",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Truyện và tiểu thuyết giả tưởng",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Văn học hiện đại",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Truyện và tác phẩm văn học hiện đại",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Kinh tế",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sách và truyện về lĩnh vực kinh tế",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Trinh thám",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Truyện và tiểu thuyết trinh thám",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Lịch sử",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sách và truyện về lịch sử",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Triết học",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tiểu thuyết và sách về triết học",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Kỹ năng sống",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sách về kỹ năng sống",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Khoa học viễn tưởng",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Truyện và tiểu thuyết khoa học viễn tưởng",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.Chapter", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChapterNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChapterTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubContentUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ChapterId");

                    b.HasIndex("BookId", "ChapterNumber")
                        .IsUnique();

                    b.ToTable("Chapters", (string)null);

                    b.HasData(
                        new
                        {
                            ChapterId = 1,
                            BookId = 1,
                            ChapterNumber = 1,
                            ChapterTitle = "Đứa bé vẫn sống",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Harry%20Potter%20V%C3%A0%20H%C3%B2n%20%C4%90%C3%A1%20Ph%C3%B9%20Th%E1%BB%A7y/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 2,
                            BookId = 1,
                            ChapterNumber = 2,
                            ChapterTitle = "Tấm kính biến mất",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Harry%20Potter%20V%C3%A0%20H%C3%B2n%20%C4%90%C3%A1%20Ph%C3%B9%20Th%E1%BB%A7y/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 3,
                            BookId = 1,
                            ChapterNumber = 3,
                            ChapterTitle = "Những lá thư không xuất xứ",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Harry%20Potter%20V%C3%A0%20H%C3%B2n%20%C4%90%C3%A1%20Ph%C3%B9%20Th%E1%BB%A7y/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 4,
                            BookId = 1,
                            ChapterNumber = 4,
                            ChapterTitle = "Người giữ khóa",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Harry%20Potter%20V%C3%A0%20H%C3%B2n%20%C4%90%C3%A1%20Ph%C3%B9%20Th%E1%BB%A7y/Ch%C6%B0%C6%A1ng%2004.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 5,
                            BookId = 1,
                            ChapterNumber = 5,
                            ChapterTitle = "Hẻm Xéo",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Harry%20Potter%20V%C3%A0%20H%C3%B2n%20%C4%90%C3%A1%20Ph%C3%B9%20Th%E1%BB%A7y/Ch%C6%B0%C6%A1ng%2005.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 6,
                            BookId = 2,
                            ChapterNumber = 1,
                            ChapterTitle = "Hoa tay",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/T%C3%B4i%20Th%E1%BA%A5y%20Hoa%20V%C3%A0ng%20Tr%C3%AAn%20C%E1%BB%8F%20Xanh/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 7,
                            BookId = 2,
                            ChapterNumber = 2,
                            ChapterTitle = "Những ngón tay",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/T%C3%B4i%20Th%E1%BA%A5y%20Hoa%20V%C3%A0ng%20Tr%C3%AAn%20C%E1%BB%8F%20Xanh/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 8,
                            BookId = 2,
                            ChapterNumber = 3,
                            ChapterTitle = "Chú Đàn",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/T%C3%B4i%20Th%E1%BA%A5y%20Hoa%20V%C3%A0ng%20Tr%C3%AAn%20C%E1%BB%8F%20Xanh/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 9,
                            BookId = 2,
                            ChapterNumber = 4,
                            ChapterTitle = "Chuyện ma của chú Đàn",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/T%C3%B4i%20Th%E1%BA%A5y%20Hoa%20V%C3%A0ng%20Tr%C3%AAn%20C%E1%BB%8F%20Xanh/Ch%C6%B0%C6%A1ng%2004.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 10,
                            BookId = 3,
                            ChapterNumber = 1,
                            ChapterTitle = "Dải băng lốm đốm",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Cu%E1%BB%99c%20Phi%C3%AAu%20L%C6%B0u%20C%E1%BB%A7a%20Sherlock%20Holmes/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 11,
                            BookId = 3,
                            ChapterNumber = 2,
                            ChapterTitle = "Hội tóc hung",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Cu%E1%BB%99c%20Phi%C3%AAu%20L%C6%B0u%20C%E1%BB%A7a%20Sherlock%20Holmes/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 12,
                            BookId = 3,
                            ChapterNumber = 3,
                            ChapterTitle = "Bí ẩn ở thung lũng",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Cu%E1%BB%99c%20Phi%C3%AAu%20L%C6%B0u%20C%E1%BB%A7a%20Sherlock%20Holmes/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 13,
                            BookId = 3,
                            ChapterNumber = 4,
                            ChapterTitle = "Năm hột cam",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Cu%E1%BB%99c%20Phi%C3%AAu%20L%C6%B0u%20C%E1%BB%A7a%20Sherlock%20Holmes/Ch%C6%B0%C6%A1ng%2004.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 14,
                            BookId = 3,
                            ChapterNumber = 5,
                            ChapterTitle = "Chiếc vương miện",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Cu%E1%BB%99c%20Phi%C3%AAu%20L%C6%B0u%20C%E1%BB%A7a%20Sherlock%20Holmes/Ch%C6%B0%C6%A1ng%2005.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 15,
                            BookId = 4,
                            ChapterNumber = 1,
                            ChapterTitle = "Cha giàu, cha nghèo",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/D%E1%BA%A1y%20Con%20L%C3%A0m%20Gi%C3%A0u%20-%20T%E1%BA%ADp%201/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 16,
                            BookId = 4,
                            ChapterNumber = 2,
                            ChapterTitle = "Người giàu không làm việc vì tiền",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/D%E1%BA%A1y%20Con%20L%C3%A0m%20Gi%C3%A0u%20-%20T%E1%BA%ADp%201/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 17,
                            BookId = 4,
                            ChapterNumber = 3,
                            ChapterTitle = "Tại sao phải dạy con về tài chính?",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/D%E1%BA%A1y%20Con%20L%C3%A0m%20Gi%C3%A0u%20-%20T%E1%BA%ADp%201/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 18,
                            BookId = 5,
                            ChapterNumber = 1,
                            ChapterTitle = "Đại Việt Sử Ký Ngoại Kỷ Toàn Thư: Quyển I",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/L%E1%BB%8Bch%20S%E1%BB%AD%20Vi%E1%BB%87t%20Nam%20-%20%C4%90%E1%BA%A1i%20Vi%E1%BB%87t%20S%E1%BB%AD%20K%C3%BD%20To%C3%A0n%20Th%C6%B0/Quy%E1%BB%83n%20I.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 19,
                            BookId = 5,
                            ChapterNumber = 2,
                            ChapterTitle = "Đại Việt Sử Ký Ngoại Kỷ Toàn Thư: Quyển II",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/L%E1%BB%8Bch%20S%E1%BB%AD%20Vi%E1%BB%87t%20Nam%20-%20%C4%90%E1%BA%A1i%20Vi%E1%BB%87t%20S%E1%BB%AD%20K%C3%BD%20To%C3%A0n%20Th%C6%B0/Quy%E1%BB%83n%20II.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 20,
                            BookId = 5,
                            ChapterNumber = 3,
                            ChapterTitle = "Đại Việt Sử Ký Ngoại Kỷ Toàn Thư: Quyển III",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/L%E1%BB%8Bch%20S%E1%BB%AD%20Vi%E1%BB%87t%20Nam%20-%20%C4%90%E1%BA%A1i%20Vi%E1%BB%87t%20S%E1%BB%AD%20K%C3%BD%20To%C3%A0n%20Th%C6%B0/Quy%E1%BB%83n%20III.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 21,
                            BookId = 6,
                            ChapterNumber = 1,
                            ChapterTitle = "Chương 1",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Nh%C3%A0%20Gi%E1%BA%A3%20Kim/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 22,
                            BookId = 6,
                            ChapterNumber = 2,
                            ChapterTitle = "Chương 2",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Nh%C3%A0%20Gi%E1%BA%A3%20Kim/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 23,
                            BookId = 6,
                            ChapterNumber = 3,
                            ChapterTitle = "Chương 3",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Nh%C3%A0%20Gi%E1%BA%A3%20Kim/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 24,
                            BookId = 6,
                            ChapterNumber = 4,
                            ChapterTitle = "Chương 4",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/Nh%C3%A0%20Gi%E1%BA%A3%20Kim/Ch%C6%B0%C6%A1ng%2004.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 25,
                            BookId = 7,
                            ChapterNumber = 1,
                            ChapterTitle = "Muốn lấy mật thì đừng phá tổ ong",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/%C4%90%E1%BA%AFc%20Nh%C3%A2n%20T%C3%A2m/Ch%C6%B0%C6%A1ng%2001.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 26,
                            BookId = 7,
                            ChapterNumber = 2,
                            ChapterTitle = "Bí mật lớn nhất trong phép ứng xử",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/%C4%90%E1%BA%AFc%20Nh%C3%A2n%20T%C3%A2m/Ch%C6%B0%C6%A1ng%2002.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 27,
                            BookId = 7,
                            ChapterNumber = 3,
                            ChapterTitle = "Ai làm được điều dưới đây",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/%C4%90%E1%BA%AFc%20Nh%C3%A2n%20T%C3%A2m/Ch%C6%B0%C6%A1ng%2003.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ChapterId = 28,
                            BookId = 7,
                            ChapterNumber = 4,
                            ChapterTitle = "Thành thật quan tâm đến người khác",
                            GitHubContentUrl = "https://raw.githubusercontent.com/PeanLutHuynh/Project_Library-Books/master/%C4%90%E1%BA%AFc%20Nh%C3%A2n%20T%C3%A2m/Ch%C6%B0%C6%A1ng%2004.txt",
                            PublishedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AccessedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChapterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HistoryId");

                    b.HasIndex("BookId");

                    b.HasIndex("ChapterId");

                    b.HasIndex("UserId");

                    b.ToTable("Histories", (string)null);
                });

            modelBuilder.Entity("LibraryDesktop.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentToken")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("QrCodeData")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PaymentId");

                    b.HasIndex("PaymentToken")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("LibraryDesktop.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RatingValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Review")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId", "BookId")
                        .IsUnique();

                    b.ToTable("Ratings", (string)null);

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Cuốn sách tuyệt vời! Câu chuyện phù thủy rất hấp dẫn và đầy màu sắc. Tôi đã đọc nhiều lần và vẫn thích.",
                            UpdatedDate = new DateTime(2024, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            RatingId = 2,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Hay nhưng hơi dài dòng ở một số đoạn. Nhìn chung vẫn là một tác phẩm đáng đọc.",
                            UpdatedDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 3,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Thế giới phép thuật được xây dựng rất chi tiết và logic. J.K. Rowling thực sự là một thiên tài!",
                            UpdatedDate = new DateTime(2024, 12, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        },
                        new
                        {
                            RatingId = 4,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Nguyễn Nhật Ánh viết về tuổi thơ rất chân thực và cảm động. Đọc xong như quay về thời thơ ấu.",
                            UpdatedDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            RatingId = 5,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Câu chuyện đẹp về tình anh em và làng quê Việt Nam. Có những đoạn khiến tôi rơi nước mắt.",
                            UpdatedDate = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 5
                        },
                        new
                        {
                            RatingId = 6,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Trinh thám kinh điển! Sherlock Holmes thông minh và các vụ án rất logic. Không thể bỏ xuống được.",
                            UpdatedDate = new DateTime(2024, 12, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 7,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Phong cách viết của Conan Doyle rất hấp dẫn. Mỗi câu chuyện đều có twist bất ngờ.",
                            UpdatedDate = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        },
                        new
                        {
                            RatingId = 8,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Đây là lý do tại sao Sherlock Holmes trở thành biểu tượng thám tử. Xuất sắc!",
                            UpdatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 5
                        },
                        new
                        {
                            RatingId = 9,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Cuốn sách thay đổi tư duy của tôi về tiền bạc và đầu tư. Rất thực tế và dễ hiểu.",
                            UpdatedDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            RatingId = 10,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 3,
                            Review = "Có nhiều ý hay nhưng một số quan điểm hơi Mỹ hóa. Cần điều chỉnh cho phù hợp Việt Nam.",
                            UpdatedDate = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 11,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Bài học về tài chính cá nhân rất bổ ích. Đáng đọc cho mọi lứa tuổi.",
                            UpdatedDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 5
                        },
                        new
                        {
                            RatingId = 12,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Tài liệu lịch sử quý giá, giúp hiểu rõ hơn về nguồn gốc dân tộc. Hơi khó đọc với người hiện đại.",
                            UpdatedDate = new DateTime(2024, 12, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        },
                        new
                        {
                            RatingId = 13,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Đại Việt sử ký là kho tàng văn hóa dân tộc. Mọi người Việt Nam nên đọc ít nhất một lần.",
                            UpdatedDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 5
                        },
                        new
                        {
                            RatingId = 14,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Triết lý sâu sắc về cuộc sống và ước mơ. Paulo Coelho viết rất hay và ý nghĩa.",
                            UpdatedDate = new DateTime(2024, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            RatingId = 15,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Câu chuyện đơn giản nhưng chứa đựng nhiều bài học nhân sinh. Đáng suy ngẫm.",
                            UpdatedDate = new DateTime(2024, 12, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 16,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Cuốn sách này đã truyền cảm hứng cho tôi theo đuổi ước mơ của mình. Tuyệt vời!",
                            UpdatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        },
                        new
                        {
                            RatingId = 17,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Kinh điển về kỹ năng giao tiếp! Các nguyên tắc vẫn áp dụng được sau gần 100 năm.",
                            UpdatedDate = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 18,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 4,
                            Review = "Những bài học thực tế về cách ứng xử và làm việc với mọi người. Rất hữu ích.",
                            UpdatedDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        },
                        new
                        {
                            RatingId = 19,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RatingValue = 5,
                            Review = "Dale Carnegie thực sự hiểu tâm lý con người. Mỗi chương đều có giá trị ứng dụng cao.",
                            UpdatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Coins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Coins = 100,
                            Email = "demo@library.com",
                            PasswordHash = "Z4m0WAouR0CZpMn4ZqNX0nnr8+bfEkfV7J0Ps7umRjE=",
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "demo"
                        },
                        new
                        {
                            UserId = 2,
                            Coins = 150,
                            Email = "alice@library.com",
                            PasswordHash = "Z4m0WAouR0CZpMn4ZqNX0nnr8+bfEkfV7J0Ps7umRjE=",
                            RegistrationDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "alice"
                        },
                        new
                        {
                            UserId = 3,
                            Coins = 80,
                            Email = "bob@library.com",
                            PasswordHash = "Z4m0WAouR0CZpMn4ZqNX0nnr8+bfEkfV7J0Ps7umRjE=",
                            RegistrationDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "bob"
                        },
                        new
                        {
                            UserId = 4,
                            Coins = 200,
                            Email = "carol@library.com",
                            PasswordHash = "Z4m0WAouR0CZpMn4ZqNX0nnr8+bfEkfV7J0Ps7umRjE=",
                            RegistrationDate = new DateTime(2024, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "carol"
                        },
                        new
                        {
                            UserId = 5,
                            Coins = 120,
                            Email = "david@library.com",
                            PasswordHash = "Z4m0WAouR0CZpMn4ZqNX0nnr8+bfEkfV7J0Ps7umRjE=",
                            RegistrationDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "david"
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.UserFavorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FavoriteId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId", "BookId")
                        .IsUnique();

                    b.ToTable("UserFavorites", (string)null);
                });

            modelBuilder.Entity("LibraryDesktop.Models.UserSetting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FontSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThemeMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SettingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings", (string)null);

                    b.HasData(
                        new
                        {
                            SettingId = 1,
                            FontSize = 12,
                            ThemeMode = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("LibraryDesktop.Models.Book", b =>
                {
                    b.HasOne("LibraryDesktop.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryDesktop.Models.Chapter", b =>
                {
                    b.HasOne("LibraryDesktop.Models.Book", "Book")
                        .WithMany("Chapters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryDesktop.Models.History", b =>
                {
                    b.HasOne("LibraryDesktop.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryDesktop.Models.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LibraryDesktop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Chapter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryDesktop.Models.Payment", b =>
                {
                    b.HasOne("LibraryDesktop.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryDesktop.Models.Rating", b =>
                {
                    b.HasOne("LibraryDesktop.Models.Book", "Book")
                        .WithMany("Ratings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryDesktop.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryDesktop.Models.UserFavorite", b =>
                {
                    b.HasOne("LibraryDesktop.Models.Book", "Book")
                        .WithMany("Favorites")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryDesktop.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryDesktop.Models.UserSetting", b =>
                {
                    b.HasOne("LibraryDesktop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryDesktop.Models.Book", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("Favorites");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("LibraryDesktop.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryDesktop.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Payments");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
